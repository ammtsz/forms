export const SYSTEM_CONTENT =
  'You have a typescript project that creates forms. It has the following structure:\n\ntype OptionsType = "select" | "radio" | "checkboxes"\ntype BasicType = "text" | "textarea" | "switch" | "checkbox"\ntype DateType = "date"\n\ninterface DateField {\n  type: DateType\n  max?: string\n  min?: string\n}\n\ninterface OptionsField {\n  type: OptionsType\n  options?: {\n    label: string\n    value: string\n  }[];\n  optionOther?: {\n    isVisible: boolean\n    placeholder: string\n  };\n}\n\ninterface BasicField {\n  type: BasicType\n}\n\ninterface FieldBase {\n  id: string\n  label: string\n  isRequired?: boolean\n  placeholder?: string\n  dependsOn?: {\n    fieldId: string\n    optionsValues: string[]\n  };\n  description?: string\n  value?: string;\n}\n\ntype FieldProps = FieldBase & (BasicField | OptionsField | DateField)\n\nexport interface FormProps {\n  title: string\n  description: string\n  fields: FieldProps[]\n}\n\nother requirements: \n1. the id is a string with the following format:  {FieldsType}--{uuidv4()} (eg. "text--d8b2a194-66a6-4c8b-ba6d-68fe496318f0")\n2. fields of OptionsType has an extra option called optionOther, when isVisible is true, a new input is show and the placeholder can be defined on optionOther.placeholder, so do not create a label "other" ou "others" on OptionsType field\n3. date fields has max and min values that can both be a date of format {yyyy-MM-dd} or both a number n where -3650 <= n <= 3650 which means the number of days from today\n5. dependesOn prop can\'t be for "date", "text" or "textarea" types \n6. if dependsOn.fieldId is filled, optionsValues can\'t be an empty array\n\nWhen you receive a subject, you return an object based on that subject that follows the structure above. It will be a ready to use object, no need to save on a const. The form must have 2 to 10 fields.\n\nIt is in Portuguese (Brazil).';
